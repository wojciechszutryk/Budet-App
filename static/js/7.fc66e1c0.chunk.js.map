{"version":3,"sources":["RoutePages/TranactionsPage/components/TransactionForm/TransactionForm.js"],"names":["TransactionForm","categories","onSubmit","t","useTranslation","required","value","undefined","groupByCategories","groupBy","groupedCategories","Object","assign","id","name","categoriesToSelect","useMemo","entries","map","category","label","cat","initialValues","categoryId","date","Date","toJSON","slice","render","handleSubmit","form","submitting","pristine","values","validate","input","meta","type","placeholder","error","touched","parse","parseFloat","step","min","className","buttonType","disabled","onClick","reset"],"mappings":"kOAsFeA,EA/ES,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,WAAqC,IAAzBC,gBAAyB,MAAd,aAAc,EACpDC,EAAKC,cAALD,EAEDE,EAAW,SAAAC,GAAK,OAAKA,OAAQC,EAAYJ,EAAE,aAE3CK,EAAoBC,kBAAQR,EAAY,uBACxCS,EAAoBC,OAAOC,OAAO,CAAC,MAAS,CAAC,CAACC,GAAG,EAAGC,KAAK,WAAYN,GAErEO,EAAqBC,mBAAQ,kBAAML,OAAOM,QAAQP,GAAmBQ,KAAI,SAAAC,GAAQ,OACnF,0BAA4BC,MAAOD,EAAS,GAA5C,SACKA,EAAS,GAAGD,KAAI,SAAAG,GAAG,OAChB,wBAAqBf,MAAOe,EAAIR,GAAhC,SAAqCQ,EAAIP,MAA5BO,EAAIR,QAFVM,EAAS,SAKzB,CAACT,IAEJ,OACI,qCACI,6BAAKP,EAAE,qBACP,cAAC,IAAD,CACID,SAAUA,EACVoB,cAAe,CAAEC,WAAY,IAAKC,MAAM,IAAIC,MAAOC,SAASC,MAAM,EAAE,KACpEC,OAAQ,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,WAAYC,EAAnC,EAAmCA,SAAnC,EAA6CC,OAA7C,OACJ,uBAAM/B,SAAU2B,EAAhB,UACI,cAAC,IAAD,CAAOf,KAAK,cAAcoB,SAAU7B,EAApC,SACK,gBAAG8B,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACG,eAAC,IAAD,WACI,cAAC,IAAD,2BAAeD,GAAf,IAAsBE,KAAK,OAAOC,YAAY,iBAC9C,cAAC,IAAD,UAAQnC,EAAE,iBACTiC,EAAKG,OAASH,EAAKI,SAAW,cAAC,IAAD,UAAUJ,EAAKG,cAI1D,cAAC,IAAD,CAAOzB,KAAK,SAASoB,SAAU7B,EAAUoC,MAAO,SAAAnC,GAAK,OAAIoC,WAAWpC,EAAM,KAA1E,SACK,gBAAG6B,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACG,eAAC,IAAD,WACI,cAAC,IAAD,2BAAeD,GAAf,IAAsBE,KAAK,SAASM,KAAM,IAAML,YAAY,SAASM,IAAK,OAC1E,cAAC,IAAD,UAAQzC,EAAE,YACTiC,EAAKG,OAASH,EAAKI,SAAW,cAAC,IAAD,UAAUJ,EAAKG,cAI1D,cAAC,IAAD,CAAOzB,KAAK,aAAZ,SACK,gBAAGqB,EAAH,EAAGA,MAAH,EAAUC,KAAV,OACG,eAAC,IAAD,WACI,cAAC,IAAD,UAAQjC,EAAE,cACV,cAAC,IAAD,2BAAgBgC,GAAhB,aACKpB,WAKjB,cAAC,IAAD,CAAOD,KAAK,OAAOoB,SAAU7B,EAA7B,SACK,gBAAG8B,EAAH,EAAGA,MAAH,EAAUC,KAAV,OACG,eAAC,IAAD,WACI,cAAC,IAAD,2BAAeD,GAAf,IAAsBE,KAAK,UAC3B,cAAC,IAAD,UAAQlC,EAAE,gBAItB,sBAAK0C,UAAU,UAAf,UACI,cAAC,IAAD,CAAQC,WAAW,SAAST,KAAK,SAASU,SAAUhB,GAAcC,EAAlE,SACK7B,EAAE,YAEP,cAAC,IAAD,CACI2C,WAAW,QACXT,KAAK,SACLW,QAASlB,EAAKmB,MAHlB","file":"static/js/7.fc66e1c0.chunk.js","sourcesContent":["import React, {useMemo} from 'react'\r\nimport {Form, Field} from 'react-final-form'\r\nimport {groupBy} from 'lodash';\r\nimport {FormField, FormGroup, FormSelect, Label, Message} from \"components/Input/InputStyles\";\r\nimport {Button} from \"components\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst TransactionForm = ({categories, onSubmit = () => {}}) => {\r\n    const {t} = useTranslation();\r\n\r\n    const required = value => (value ? undefined : t('Required'));\r\n\r\n    const groupByCategories = groupBy(categories, 'parentCategory.name');\r\n    const groupedCategories = Object.assign({\"Other\": [{id:0, name:\"Other\"}]}, groupByCategories);\r\n\r\n    const categoriesToSelect = useMemo(() => Object.entries(groupedCategories).map(category => (\r\n        <optgroup key={category[0]} label={category[0]}>\r\n            {category[1].map(cat => (\r\n                <option key={cat.id} value={cat.id}>{cat.name}</option>\r\n            ))}\r\n        </optgroup>\r\n    )),[groupedCategories]);\r\n\r\n    return(\r\n        <>\r\n            <h1>{t('Add Transaction')}</h1>\r\n            <Form\r\n                onSubmit={onSubmit}\r\n                initialValues={{ categoryId: \"0\", date: new Date().toJSON().slice(0,10)}}\r\n                render={({ handleSubmit, form, submitting, pristine, values }) => (\r\n                    <form onSubmit={handleSubmit}>\r\n                        <Field name=\"description\" validate={required}>\r\n                            {({ input, meta }) => (\r\n                                <FormGroup>\r\n                                    <FormField {...input} type=\"text\" placeholder=\"Description\"/>\r\n                                    <Label>{t('description')}</Label>\r\n                                    {meta.error && meta.touched && <Message>{meta.error}</Message>}\r\n                                </FormGroup>\r\n                            )}\r\n                        </Field>\r\n                        <Field name=\"amount\" validate={required} parse={value => parseFloat(value,10)}>\r\n                            {({ input, meta }) => (\r\n                                <FormGroup>\r\n                                    <FormField {...input} type=\"number\" step={0.01} placeholder=\"Amount\" min={0.01}/>\r\n                                    <Label>{t('amount')}</Label>\r\n                                    {meta.error && meta.touched && <Message>{meta.error}</Message>}\r\n                                </FormGroup>\r\n                            )}\r\n                        </Field>\r\n                        <Field name=\"categoryId\">\r\n                            {({ input, meta }) => (\r\n                                <FormGroup>\r\n                                    <Label>{t('category')}</Label>\r\n                                    <FormSelect {...input}>\r\n                                        {categoriesToSelect}\r\n                                    </FormSelect>\r\n                                </FormGroup>\r\n                            )}\r\n                        </Field>\r\n                        <Field name=\"date\" validate={required}>\r\n                            {({ input, meta }) => (\r\n                                <FormGroup>\r\n                                    <FormField {...input} type=\"date\"/>\r\n                                    <Label>{t('date')}</Label>\r\n                                </FormGroup>\r\n                            )}\r\n                        </Field>\r\n                        <div className=\"buttons\">\r\n                            <Button buttonType=\"submit\" type=\"submit\" disabled={submitting || pristine}>\r\n                                {t('Submit')}\r\n                            </Button>\r\n                            <Button\r\n                                buttonType=\"reset\"\r\n                                type=\"button\"\r\n                                onClick={form.reset}\r\n                            >\r\n                                Reset\r\n                            </Button>\r\n                        </div>\r\n                    </form>\r\n                )}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TransactionForm;\r\n"],"sourceRoot":""}