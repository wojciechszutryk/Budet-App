{"version":3,"sources":["RoutePages/components/addBudgetForm/AddBudgetForm.js"],"names":["AddBudgetForm","categories","onSubmit","t","useTranslation","useState","selectedCategories","setSelectedCategories","budgetFounds","setBudgetFounds","budgetName","setBudgetName","FoundsError","setFoundsError","NameError","setNameError","categoriesToSelect","useMemo","Object","entries","map","category","value","id","label","name","type","placeholder","onChange","event","target","step","min","closeMenuOnSelect","isMulti","options","to","disabled","buttonType","onClick","totalAmount","document","getElementById","reset"],"mappings":"kOAyGeA,EAlGO,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,SACzBC,EAAKC,cAALD,EADuC,EAEME,mBAAS,IAFf,mBAEvCC,EAFuC,KAEnBC,EAFmB,OAGNF,mBAAS,GAHH,mBAGvCG,EAHuC,KAGzBC,EAHyB,OAIVJ,mBAAS,IAJC,mBAIvCK,EAJuC,KAI3BC,EAJ2B,OAKRN,oBAAS,GALD,mBAKvCO,EALuC,KAK1BC,EAL0B,OAMZR,oBAAS,GANG,mBAMvCS,EANuC,KAM5BC,EAN4B,KAoCxCC,EAAqBC,mBAAQ,kBAAMC,OAAOC,QAAQlB,GAAYmB,KAAI,SAAAC,GAAQ,MAC5E,CAACC,MAAOD,EAAS,GAAGE,GAAIC,MAAMH,EAAS,GAAGI,WAC3C,CAACxB,IAEJ,OACI,qCACI,6BAAKE,EAAE,gBACP,uBAAMoB,GAAG,aAAT,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CACIG,KAAK,OACLC,YAAY,OACZC,SAxCK,SAACC,GAClBA,EAAMC,OAAOR,OAAOP,GAAa,GACrCJ,EAAckB,EAAMC,OAAOR,UAwCf,cAAC,IAAD,UAAQnB,EAAE,UACTW,EAAY,cAAC,IAAD,UAAUX,EAAE,cAAyB,QAGtD,eAAC,IAAD,WACI,cAAC,IAAD,CACIuB,KAAK,SACLK,KAAM,IACNJ,YAAY,SACZK,IAAK,IACLJ,SAhDO,SAACC,GACpBA,EAAMC,OAAOR,OAAOT,GAAe,GACvCJ,EAAgBoB,EAAMC,OAAOR,UAgDjB,cAAC,IAAD,UAAQnB,EAAE,YACTS,EAAc,cAAC,IAAD,UAAUT,EAAE,cAAyB,QAGxD,cAAC,IAAD,UACI,cAAC,IAAD,CACIyB,SAAUrB,EACVoB,YAAaxB,EAAE,YACf8B,mBAAmB,EACnBC,SAAO,EACPC,QAASnB,MAIjB,eAAC,IAAD,WACI,cAAC,IAAD,CAAOoB,GAAG,qBAAV,SACI,cAAC,IAAD,CACIC,SAAUvB,GAAaF,EACvB0B,WAAW,SACXZ,KAAK,SACLa,QA1DH,WACA,KAAb7B,GAAiBK,GAAa,GAC9BP,GAAc,GAAGK,GAAe,GAC/BC,GAAcF,GACfV,EAAS,CACLuB,KAAMf,EACNT,WAAYK,EACZkC,YAAahC,KA+CL,SAKEL,EAAE,YAER,cAAC,IAAD,CACImC,WAAW,QACXZ,KAAK,SACLa,QAvEF,WACdE,SAASC,eAAe,cAAcC,QACtClC,EAAgB,GAChBE,EAAc,IACdJ,EAAsB,KAgEV","file":"static/js/9.b8404dbe.chunk.js","sourcesContent":["import React, {useState, useMemo} from 'react'\r\nimport {FormField, FormGroup, Label, Message} from \"components/Input/InputStyles\";\r\nimport {Button} from \"components\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport Select from 'react-select'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst AddBudgetForm = ({categories, onSubmit}) => {\r\n    const {t} = useTranslation();\r\n    const [selectedCategories, setSelectedCategories] = useState([]);\r\n    const [budgetFounds, setBudgetFounds] = useState(0);\r\n    const [budgetName, setBudgetName] = useState('');\r\n    const [FoundsError, setFoundsError] = useState(true);\r\n    const [NameError, setNameError] = useState(true);\r\n\r\n    const handleNameChange = (event) => {\r\n        if (event.target.value) setNameError(false)\r\n        setBudgetName(event.target.value);\r\n    }\r\n    const handleFoundsChange = (event) => {\r\n        if (event.target.value) setFoundsError(false)\r\n        setBudgetFounds(event.target.value);\r\n    }\r\n\r\n    const resetForm = () => {\r\n        document.getElementById(\"budgetForm\").reset();\r\n        setBudgetFounds(0);\r\n        setBudgetName('');\r\n        setSelectedCategories([]);\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        if (budgetName==='') setNameError(true);\r\n        if (budgetFounds<=0) setFoundsError(true);\r\n        if (!NameError && !FoundsError){\r\n            onSubmit({\r\n                name: budgetName,\r\n                categories: selectedCategories,\r\n                totalAmount: budgetFounds\r\n            })\r\n        }\r\n    }\r\n\r\n    const categoriesToSelect = useMemo(() => Object.entries(categories).map(category => (\r\n        {value: category[1].id, label:category[1].name}\r\n    )),[categories]);\r\n\r\n    return(\r\n        <>\r\n            <h1>{t('Add Budget')}</h1>\r\n            <form id=\"budgetForm\">\r\n                <FormGroup>\r\n                    <FormField\r\n                        type=\"text\"\r\n                        placeholder=\"Name\"\r\n                        onChange={handleNameChange}\r\n                    />\r\n                    <Label>{t('name')}</Label>\r\n                    {NameError ? <Message>{t('Required')}</Message> : null}\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <FormField\r\n                        type=\"number\"\r\n                        step={0.01}\r\n                        placeholder=\"Amount\"\r\n                        min={0.01}\r\n                        onChange={handleFoundsChange}\r\n                    />\r\n                    <Label>{t('amount')}</Label>\r\n                    {FoundsError ? <Message>{t('Required')}</Message> : null}\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Select\r\n                        onChange={setSelectedCategories}\r\n                        placeholder={t('category')}\r\n                        closeMenuOnSelect={false}\r\n                        isMulti\r\n                        options={categoriesToSelect}\r\n                    />\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Link  to='/budget/categories'>\r\n                        <Button\r\n                            disabled={NameError || FoundsError}\r\n                            buttonType='submit'\r\n                            type='submit'\r\n                            onClick={handleSubmit}\r\n                        >{t('Next')}</Button>\r\n                    </Link>\r\n                    <Button\r\n                        buttonType=\"reset\"\r\n                        type=\"button\"\r\n                        onClick={resetForm}\r\n                    >\r\n                        Reset\r\n                    </Button>\r\n                </FormGroup>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddBudgetForm;\r\n"],"sourceRoot":""}