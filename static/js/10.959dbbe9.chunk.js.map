{"version":3,"sources":["RoutePages/components/editCategoriesForm/editCategoriesFormStyles.js","RoutePages/components/editCategoriesForm/editCategoriesForm.js"],"names":["CategoriesHeader","styled","span","theme","colors","orange","dark","StyledCategoryBox","ol","StyledChildrenCategoriesBox","ul","StyledParent","li","normal","StyledChild","gray","light","black","EditCategoriesForm","childrenCategories","parentCategories","onSubmit","t","useTranslation","useState","parentCat","setParentCat","childrenCat","setChildrenCat","handleInputEmpty","useCallback","input","message","placeholder","classList","add","setTimeout","remove","addChild","parentName","parentCategoryId","find","parent","name","id","document","getElementById","value","newChildCat","length","parseInt","slice","toString","addParent","cat","newParentCat","removeChild","childrenCopy","index","indexOf","child","splice","removeParent","parentCopy","parentIndex","filter","groupedCategories","useMemo","Object","entries","groupBy","childrenCategory","parentCategory","nonEmptyParents","map","category","emptyParents","includes","emptyParentsList","buttonType","onClick","icon","faTrashAlt","faPlus","type","Math","random","groupedCategoriesList","resetForm","toUpperCase","to","addedChildren","removedChildren","addedParents","removedParents"],"mappings":"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","file":"static/js/10.959dbbe9.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const CategoriesHeader = styled.span`\r\n  font-weight: 600;\r\n  color: ${({theme}) => theme.colors.orange.dark};\r\n`;\r\n\r\nexport const StyledCategoryBox = styled.ol`\r\n  margin-bottom: 7px;\r\n`;\r\n\r\nexport const StyledChildrenCategoriesBox = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n`;\r\n\r\nexport const StyledParent = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  padding: 2px 5px 2px 10px;\r\n  background-color: ${({theme}) => theme.colors.orange.dark};\r\n  color: white;\r\n  border-top-left-radius: 12px;\r\n  border-bottom-left-radius: 12px;\r\n  \r\n  & button{\r\n    width: 36px;\r\n    height: 24px;\r\n    margin: 2px 0;\r\n    border: none;\r\n    outline: none;\r\n    border-radius: 20px;\r\n    color: white;\r\n    background-color: ${({theme}) => theme.colors.orange.dark};\r\n    transition: .1s;\r\n    &:hover{\r\n      background-color: ${({theme}) => theme.colors.orange.normal};\r\n    }\r\n  }\r\n\r\n  & input:last-child{\r\n    border: none;\r\n    outline: none;\r\n    color: white;\r\n    background-color: ${({theme}) => theme.colors.orange.normal};\r\n    border-radius: 12px;\r\n    &::placeholder{\r\n      color: rgba(255, 255, 255, 0.4);\r\n    }\r\n\r\n    &.red::placeholder{\r\n      color: red;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledChild = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 90%;\r\n  padding-left: 10px;\r\n  background-color: ${({theme}) => theme.colors.gray.light};\r\n  color: ${({theme}) => theme.colors.black.normal};\r\n  transition: all .1s;\r\n  border-left: 3px solid black;\r\n  border-right: 3px solid black;\r\n  \r\n  &:last-child{\r\n    border-bottom: 3px solid black;\r\n  }\r\n  \r\n  &:last-child button:first-child{\r\n    position: relative;\r\n    width: 20px;\r\n    height: 20px;\r\n    margin-top: 2px;\r\n    border-radius: 10px;\r\n    border: none;\r\n    outline: none;\r\n    background-color: #eee;\r\n    line-height: 20px;\r\n    transform: rotate(0deg);\r\n    transition: all .4s;\r\n  }\r\n\r\n  & button:last-child{\r\n    margin: 2px 0;\r\n  }\r\n\r\n  & input:last-child{\r\n    border: none;\r\n    outline: none;\r\n    color: white;\r\n    background-color: ${({theme}) => theme.colors.gray.light};\r\n    \r\n    &.red::placeholder{\r\n      color: red;\r\n    }\r\n  }\r\n  \r\n  &:hover{\r\n    width: 100%;\r\n    border-top-left-radius: 12px;\r\n    border-bottom-left-radius: 12px;\r\n  }\r\n\r\n  &:last-child:hover button:first-child{\r\n    transform: rotate(-540deg);\r\n    background-color: ${({theme}) => theme.colors.orange.normal};\r\n  }\r\n`;","import React, {useState, useMemo, useCallback} from 'react'\r\nimport {Button} from \"components\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {\r\n    CategoriesHeader,\r\n    StyledCategoryBox,\r\n    StyledChild,\r\n    StyledChildrenCategoriesBox,\r\n    StyledParent\r\n} from \"./editCategoriesFormStyles\";\r\nimport {groupBy} from \"lodash\";\r\nimport {faTrashAlt, faPlus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nconst EditCategoriesForm = ({childrenCategories, parentCategories, onSubmit}) => {\r\n    const {t} = useTranslation();\r\n    const [parentCat, setParentCat] = useState(parentCategories);\r\n    const [childrenCat, setChildrenCat] = useState(childrenCategories);\r\n\r\n    const handleInputEmpty = useCallback((input, message) => {\r\n        input.placeholder = t(message);\r\n        input.classList.add('red');\r\n        setTimeout(() => {\r\n            input.placeholder = t('Add new');\r\n            input.classList.remove('red');\r\n        },3000);\r\n    },[t]);\r\n\r\n    const addChild = useCallback((parentName) => {\r\n        const parentCategoryId = parentCat.find(parent => parent.name === parentName).id;\r\n        const input = document.getElementById(parentName);\r\n        if (!input.value || !parentCategoryId) handleInputEmpty(input, 'Insert category name');\r\n        else {\r\n            const id = (childrenCat.length+1) > (parseInt(childrenCat.slice(-1)[0].id)+1) ? (childrenCat.length+1).toString() : (parseInt(childrenCat.slice(-1)[0].id)+1).toString();\r\n            const newChildCat = {\r\n                //backend\r\n                id,\r\n                parentCategoryId,\r\n                name: input.value\r\n            }\r\n            setChildrenCat([...childrenCat, newChildCat]);\r\n        }\r\n    },[childrenCat, handleInputEmpty, parentCat]);\r\n\r\n    const addParent =  useCallback(() => {\r\n        const input = document.getElementById('newParent');\r\n        if (!input.value) handleInputEmpty(input, 'Insert category name');\r\n        else if(parentCat.find(cat => cat.name === input.value)) {\r\n            input.value = \"\";\r\n            handleInputEmpty(input, 'Category exists');\r\n        }\r\n        else {\r\n            const id = (parentCat.length+1) > (parseInt(parentCat.slice(-1)[0].id)+1) ? (parentCat.length+1).toString() : (parseInt(parentCat.slice(-1)[0].id)+1).toString();\r\n            const newParentCat = {\r\n                //backend\r\n                id,\r\n                name: input.value\r\n            }\r\n            setParentCat([...parentCat, newParentCat]);\r\n        }\r\n    },[handleInputEmpty, parentCat]);\r\n\r\n    const removeChild = useCallback((id, parentCategoryId) => {\r\n        const childrenCopy = [...childrenCat];\r\n        const index = childrenCopy.indexOf(childrenCopy.find(child => child.id === id && child.parentCategoryId === parentCategoryId));\r\n        childrenCopy.splice(index,1)\r\n        setChildrenCat(childrenCopy)\r\n    },[childrenCat]);\r\n\r\n    const removeParent = useCallback((parentName) => {\r\n        const childrenCopy = [...childrenCat];\r\n        const parentCopy = [...parentCat];\r\n        const parentIndex = parentCopy.indexOf(parentCopy.find(parent => parent.name === parentName));\r\n        setChildrenCat(childrenCopy.filter(child => (\r\n            child.parentCategoryId !== parentCopy[parentIndex].id\r\n        )))\r\n        parentCopy.splice(parentIndex,1);\r\n        setParentCat(parentCopy);\r\n    },[childrenCat, parentCat]);\r\n\r\n    const groupedCategories = useMemo(()=> Object.entries(groupBy(childrenCat,\r\n        childrenCategory => parentCat.find(\r\n            parentCategory => parentCategory.id === childrenCategory.parentCategoryId).name\r\n    )),[childrenCat, parentCat]);\r\n    \r\n    const nonEmptyParents = groupedCategories.map(category => category[0]);\r\n    const allParents = parentCat.map(category => category.name);\r\n    const emptyParents = allParents.filter(parent => !nonEmptyParents.includes(parent));\r\n    const emptyParentsObjects = parentCat.filter(parent => emptyParents.includes(parent.name));\r\n    const emptyParentsList = emptyParentsObjects.map(parent => (\r\n        <StyledCategoryBox key={parent.name+Math.random()*100}>\r\n            <StyledParent>\r\n                {parent.name}\r\n                <Button buttonType={'delete'} onClick={() => removeParent(parent.name)}><FontAwesomeIcon icon={faTrashAlt} /></Button>\r\n            </StyledParent>\r\n            <StyledChildrenCategoriesBox>\r\n                <StyledChild>\r\n                    <button onClick={() => addChild(parent.name)}><FontAwesomeIcon icon={faPlus}/></button>\r\n                    <input type=\"text\" id={parent.name} placeholder={t('Add new')}/>\r\n                </StyledChild>\r\n            </StyledChildrenCategoriesBox>\r\n        </StyledCategoryBox>\r\n    ));\r\n    \r\n    const groupedCategoriesList = useMemo(() => groupedCategories.map(parentCategory => {\r\n        const [parentName, children] = parentCategory;\r\n        const childrenCategories = children.map(child => (\r\n            <StyledChild key={child.name+Math.random()*100}>\r\n                {child.name}\r\n                <Button buttonType={'delete'} onClick={() => removeChild(child.id, child.parentCategoryId)}><FontAwesomeIcon icon={faTrashAlt}/></Button>\r\n            </StyledChild>\r\n        ))\r\n        return (\r\n            <StyledCategoryBox key={parentName+Math.random()*100}>\r\n                <StyledParent key={parentName+Math.random()*100}>\r\n                    {parentName}\r\n                    <Button buttonType={'delete'} onClick={() => removeParent(parentName)}><FontAwesomeIcon icon={faTrashAlt} /></Button>\r\n                </StyledParent>\r\n                <StyledChildrenCategoriesBox>\r\n                    {childrenCategories}\r\n                    <StyledChild>\r\n                        <button onClick={() => addChild(parentName)}><FontAwesomeIcon icon={faPlus}/></button>\r\n                        <input type=\"text\" id={parentName} placeholder={t('Add new')}/>\r\n                    </StyledChild>\r\n                </StyledChildrenCategoriesBox>\r\n            </StyledCategoryBox>\r\n        )\r\n    }),[addChild, groupedCategories, removeChild, removeParent, t]);\r\n\r\n    const resetForm = useCallback(()=> () => {\r\n        setChildrenCat(childrenCategories);\r\n        setParentCat(parentCategories);\r\n    },[childrenCategories, parentCategories]);\r\n\r\n    const handleSubmit = () => {\r\n        const addedChildren = childrenCat.filter(child => !childrenCategories.includes(child));\r\n        const removedChildren = childrenCategories.filter(child => !childrenCat.includes(child));\r\n        const addedParents = parentCat.filter(parent => !parentCategories.includes(parent));\r\n        const removedParents = parentCategories.filter(parent => !parentCat.includes(parent));\r\n        onSubmit(addedChildren, removedChildren, addedParents, removedParents);\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <CategoriesHeader>{t(\"categories\").toUpperCase()}</CategoriesHeader>\r\n            {groupedCategoriesList}\r\n            {emptyParentsList}\r\n            <StyledParent>\r\n                <button onClick={addParent}><FontAwesomeIcon icon={faPlus}/></button>\r\n                <input type=\"text\" id='newParent' placeholder={t(\"New parent Category\")}/>\r\n            </StyledParent>\r\n            <div>\r\n                <Link to='/budget'>\r\n                    <Button\r\n                        buttonType='submit'\r\n                        type='submit'\r\n                        onClick={handleSubmit}\r\n                    >\r\n                        {t('Save')}\r\n                    </Button>\r\n                </Link>\r\n                <Button\r\n                    buttonType=\"reset\"\r\n                    type=\"button\"\r\n                    onClick={resetForm}\r\n                >\r\n                    Reset\r\n                </Button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditCategoriesForm;"],"sourceRoot":""}